resources:
- repo: self
  clean: true
trigger:
  batch: true
  branches:
    include:
    - master

stages:
- stage: build
  jobs:
  - job: build
    pool:
      vmImage: 'windows-latest'
    variables:
      BuildConfiguration: 'release'
    steps:
    - checkout: self

    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        useGlobalJson: true

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration) --no-cache'
    
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: false
        projects: '**/SqlManagedIdentity.csproj'
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish build Artifact'
      inputs:
        targetPath: '$(build.artifactstagingdirectory)'
        artifactName: app

- stage: release
  jobs:
  - job: deploy
    pool:
      vmImage: 'windows-latest'
    variables:
      ResourceGroupName: 'sql-managed-identity'
      AppServiceName: 'sql-managed-identity'

    steps:
    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: app
        targetPath: '$(System.ArtifactsDirectory)'

    - task: AzureRmWebAppDeployment@4
      displayName: 'Publish'
      inputs:
        azureSubscription: 'Opensource Deployments'
        WebAppName: '$(ResourceGroupName)'
        deployToSlotOrASE: false
        ResourceGroupName: '$(AppServiceName)'
        packageForLinux: '$(System.ArtifactsDirectory)/SqlManagedIdentity.zip'
        enableCustomDeployment: true
        DeploymentType: runFromZip
